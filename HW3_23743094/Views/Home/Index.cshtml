@model HW3_23743094.Models.HomeViewModel

<div class="container">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <div class="row">
 
        <div class="col-md-6">
            <h3>Students</h3>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createStudentModal">Create</button>

            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Class</th>
                    </tr>
                </thead>
                <tbody>
                    
                    @foreach (var student in Model.Students) // the view receives HomeViewModel
                                                            // which means  it can directly access the lists within this model
                    {
                        <tr>
                            <td>@student.Name</td>
                            <td>@student.Surname</td>
                            <td>@student.Class</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

   
        <div class="col-md-6">
            <h3>Books</h3>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createBookModal">Create</button>

            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model.Books)
                    {
                        <tr>
                            <td>@book.Name</td>
                            <td>@book.Author.Name</td>
                            <td>
                                @{
                                    // Determine the status based on Borrow records
                                    var isOut = book.Borrows.Any(b => b.BroughtDate == null);
                                    string status = isOut ? "Out" : "Available";
                                }
                                @status
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal for Creating Student -->
<div class="modal fade" id="createStudentModal" tabindex="-1" role="dialog" aria-labelledby="createStudentModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createStudentModalLabel">Create New Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                
                @using (Html.BeginForm("CreateStudent", "Home", FormMethod.Post)) //post method to post data to  create student in the home controler 
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label for="Name">Name</label>
                        @Html.TextBox("Name", null, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label for="Surname">Surname</label>
                        @Html.TextBox("Surname", null, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label for="Class">Class</label>
                        @Html.TextBox("Class", null, new { @class = "form-control", required = "required" })
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createBookModal" tabindex="-1" role="dialog" aria-labelledby="createBookModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createBookModalLabel">Create New Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateBook", "Home", FormMethod.Post)) //post method to post data to  create book in the home controler 
                {
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label for="Name">Title</label>
                        @Html.TextBox("Name", null, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label for="AuthorId">Author</label>
                        @Html.DropDownList("AuthorId", new SelectList(Model.Authors, "AuthorId", "Name"), "Select an Author", new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label for="TypeId">Type</label>
                        @Html.DropDownList("TypeId", new SelectList(Model.Types, "TypeId", "Name"), "Select a Type", new { @class = "form-control", required = "required" })
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>
                }
            </div>
        </div>
    </div>
</div>

